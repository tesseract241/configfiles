#!/usr/bin/env bash

#We don't set -u because we depend on arrays[undeclared_key] to return an empty string (there is no way to test if a key exists that I can see)
set -e -o pipefail 

basename=$(basename "$0")

if ! command -v jq > /dev/null 2>&1; then
    echo "$basename needs jq to function, please install it and make sure it's in PATH"
    exit 1
fi

if ! command -v jq > /dev/null 2>&1; then
    echo "$basename needs fotsearch to function, please install it and make sure it's in PATH"
    exit 1
fi

declare -A league_ids
league_ids[at1]="38 Bundesliga Austria"
league_ids[be1]="40 First Division A Belgium"
league_ids[dk1]="46 Superligaen Denmark"
league_ids[en1]="47 Premier League England"
league_ids[en2]="48 Championship England"
league_ids[fi1]="51 Veikkausliiga Finland"
league_ids[fr1]="53 Ligue 1 France"
league_ids[de1]="54 Bundesliga Germany"
league_ids[it1]="55 Serie A Italy"
league_ids[nl1]="57 Eredivisie Netherlands"
league_ids[no1]="59 Eliteserien Norway"
league_ids[pt1]="61 Liga Portugal Portugal"
league_ids[ru1]="63 Premier League Russia"
league_ids[sc1]="64 Premiership Scotland"
league_ids[ol]="66 Summer Olympics International"
league_ids[se1]="67 Allsvenskan Sweden"
league_ids[ch1]="69 Super League Switzerland"
league_ids[tr1]="71 Super Lig Türkiye"
league_ids[dk2]="85 1. Division Denmark"
league_ids[it2]="86 Serie B Italy"
league_ids[es1]="87 LaLiga Spain"
league_ids[en3]="108 League One England"
league_ids[en4]="109 League Two England"
league_ids[fr2]="110 Ligue 2 France"
league_ids[nl2]="111 Eerste Divisie Netherlands"
league_ids[ar1]="112 Liga Profesional Argentina"
league_ids[au1]="113 A-League Australia"
league_ids[wl1]="116 Premier League Wales"
league_ids[en5]="117 National League England"
league_ids[am1]="118 Premier League Armenia"
league_ids[at2]="119 2. Liga Austria"
league_ids[cn1]="120 Super League China"
league_ids[cr1]="121 Primera Division Costa Rica"
league_ids[cz1]="122 1. Liga Czech Republic"
league_ids[sc2]="123 Championship Scotland"
league_ids[sc3]="124 League One Scotland"
league_ids[sc4]="125 League Two Scotland"
league_ids[ie1]="126 Premier Division Ireland"
league_ids[il1]="127 Ligat HaAl Israel"
league_ids[il2]="128 Leumit League Israel"
league_ids[ne1]="129 Premiership Northern Ireland"
league_ids[us1]="130 MLS United States"
league_ids[pe1]="131 Primera Division Peru"
league_ids[gr1]="135 Super League 1 Greece"
league_ids[cy1]="136 1. Division Cyprus"
league_ids[es2]="140 LaLiga2 Spain"
league_ids[bo1]="144 Primera Division Bolivia"
league_ids[de2]="146 2. Bundesliga Germany"
league_ids[it3]="147 Serie C Italy"
league_ids[uy1]="161 Primera Division Uruguay"
league_ids[ch2]="163 Challenge League Switzerland"
league_ids[tr2]="165 1. Lig Türkiye"
league_ids[se2]="168 Superettan Sweden"
league_ids[se3]="169 Ettan Sweden"
league_ids[si1]="173 Prva Liga Slovenia"
league_ids[sk1]="176 Super Liga Slovakia"
league_ids[rs1]="182 Super Liga Serbia"
league_ids[pt2]="185 Liga Portugal 2 Portugal"
league_ids[ro1]="189 Liga I Romania"
league_ids[pl1]="196 Ekstraklasa Poland"
league_ids[pl2]="197 I Liga Poland"
league_ids[py1]="199 Division Profesional Paraguay"
league_ids[no2]="203 1. Divisjon Norway"
league_ids[no3]="204 2. Divisjon Norway"
league_ids[de3]="208 3. Liga Germany"
league_ids[hu1]="212 NB I Hungary"
league_ids[is1]="215 Besta deildin Iceland"
league_ids[is2]="216 1. Deild Iceland"
league_ids[is3]="217 Cup Iceland"
league_ids[ie2]="218 First Division Ireland"
league_ids[jp1]="223 J. League Japan"
league_ids[kz1]="225 Premier League Kazakhstan"
league_ids[lv1]="226 Virsliga Latvia"
league_ids[lt1]="228 A Lyga Lithuania"
league_ids[lu1]="229 National Division Luxembourg"
league_ids[mx1]="230 Liga MX Mexico"
league_ids[md1]="231 Super Liga Moldova"
league_ids[me1]="232 1. CFL Montenegro"
league_ids[dk3]="239 2. Division Denmark"
league_ids[dk4]="240 3. Division Denmark"
league_ids[dk5]="241 Danmarksserien Denmark"
league_ids[ec1]="246 Serie A Ecuador"
league_ids[et1]="248 Meistriliiga Estonia"
league_ids[mk1]="249 Prva Liga Macedonia"
league_ids[fo1]="250 Premier League Faroe Islands"
league_ids[fi1]="251 Ykkönen Finland"
league_ids[hr1]="252 HNL Croatia"
league_ids[cz2]="253 FNL Czech Republic"
league_ids[cz1c]="254 Cup Czech Republic"
league_ids[al1]="260 Kategoria Superiore Albania"
league_ids[az1]="262 Premier League Azerbaijan"
league_ids[by1]="263 Premier Division Belarus"
league_ids[be2]="264 2. Division Belgium"
league_ids[ba1]="267 Premier League Bosnia-Herzegovina"
league_ids[br1]="268 Serie A Brazil"
league_ids[bg1]="270 First Professional League Bulgaria"
league_ids[cl1]="273 Primera Division Chile"
league_ids[co1]="274 Primera A Colombia"
league_ids[ru2]="338 1. Division Russia"
league_ids[ve1]="339 Primera Division Venezuela"
league_ids[ua1]="441 Premier League Ukraine"

league_ids[eu1]="42 Champions League International"
league_ids[ca]="44 Copa America International"
league_ids[sa1]="45 Copa Libertadores International"
league_ids[eu]="50 EURO International"
league_ids[eu2]="73 Europa League International"
league_ids[wc]="77 World Cup International"
league_ids[en1c]="132 FA Cup England"
league_ids[en2c]="133 EFL Cup England"
league_ids[fr1c]="134 Coupe de France France"
league_ids[sc1c]="137 Scottish Cup Scotland"
league_ids[es1c]="138 Copa del Rey Spain"
league_ids[it1c]="141 Coppa Italia Italy"
league_ids[en3c]="142 EFL Trophy England"
league_ids[fi1c]="143 Cup Finland"
league_ids[gr1c]="145 Greece Cup Greece"
league_ids[be1c]="149 Cup Belgium"
league_ids[tr1c]="151 Turkish Cup Türkiye"
league_ids[wl1c]="160 Wales Cup 1 "
league_ids[ch1c]="164 Cup Switzerland"
league_ids[se1c]="171 Cup Sweden"
league_ids[si1c]="174 Cup Slovenia"
league_ids[sk1c]="177 FA Cup Slovakia"
league_ids[sc3c]="179 Challenge Cup Scotland"
league_ids[sc2c]="180 League Cup Scotland"
league_ids[rs1c]="183 Cup Serbia"
league_ids[pt1c]="186 Cup Portugal"
league_ids[pt2c]="187 League Cup Portugal"
league_ids[ro1c]="190 Cup Romania"
league_ids[ru1c]="193 Cup Russia"
league_ids[pl1c]="198 FA Cup Poland"
league_ids[no1c]="206 Cup Norway"
league_ids[de1c]="209 DFB Pokal Germany"
league_ids[hu1c]="213 FA Cup Hungary"
league_ids[hu2c]="214 Hungary Cup 2 "
league_ids[ie1c]="219 FAI Cup Ireland"
league_ids[ie2c]="220 League Cup "
league_ids[jp1c]="224 League Cup Japan"
league_ids[nl1c]="235 KNVB Cup Netherlands"
league_ids[dk1c]="242 DBU Pokalen Denmark"
league_ids[hr1c]="275 FA Cup Croatia"
league_ids[at1c]="278 Cup Austria"
league_ids[eu19]="287 EURO U19 International"
league_ids[eu21]="288 EURO U21 Qualification International"
league_ids[wc20]="296 World Cup U20 International"
league_ids[bg1c]="271 Cup Bulgaria"
league_ids[na1]="297 CONCACAF Champions League International"
league_ids[na]="298 CONCACAF Gold Cup International"
league_ids[sa2]="299 Copa Sudamericana International"
league_ids[ea]="300 East Asian Championship International"
league_ids[ue17]="301 European Championship U-17 International"
league_ids[wc17]="306 World Cup U17 International"
league_ids[cy1c]="330 Cup Cyprus"
league_ids[fi2c]="342 Finland League Cup Finland"
league_ids[ua1c]="442 Cup Ukraine"
league_ids[rsa]="491 Recopa Sudamericana International"
league_ids[eu3]="10216 Europa Conference League"


if [[ $1 == "-h" ]]; then
    echo -e "Usage:\n\t$basename \033[1mleague name\033[0m [\033[1mseason\033[0m]\n\t$basename -l"; exit 0
fi

if [[ $# == 0 ]]; then
    echo -e "Usage:\n\t$basename \033[1mleague name\033[0m [\033[1mseason\033[0m]\n\t$basename -l" 1>&2; exit 1
fi

if [[ $1 == "-l" ]]; then
    shopt -s extglob
    echo "These are the ids for leagues:"
    for key in "${!league_ids[@]}"; do
        echo "$key stands for ${league_ids[$key]##+([0-9 ])}"
    done
    exit 0
fi

#Check if the user only gave us a single year to determine the season
if [[ "${@: -1}" =~ [0-9][0-9][0-9][0-9] && ! "${@: -1}" =~ [0-9][0-9][0-9][0-9]/[0-9][0-9][0-9][0-9] ]]; then
    echo "Wrong season format, you need something like 2020/2021, you gave ${@: -1}" 1>&2 
    exit 1
fi

#Extract a season if it's there, checking if the user gave us one with non contiguous years
league="$1"
if [[ "${@: -1}" =~ [0-9][0-9][0-9][0-9]/[0-9][0-9][0-9][0-9] ]]; then
    season="${@: -1}"
    season="${season%%/*}"
    season="$season/"$((season + 1))
    if [[ "${@: -1}" != $season ]]; then
        echo "Wrong season format, you need something like 2020/2021" 1>&2 
        exit 1
    fi
    count=$(( "$#" - 1 ))
    league="${@:1:$count}"
fi

id="${league_ids[$1]}"
if [[ -n $id ]]; then
    id=($id)
    id=${id[0]}
else
    id=$(fotsearch "$league" | jq -r 'if .leagueSuggest then .leagueSuggest[0].options[0].payload.id else "" end')
    if [[ -z "$id" ]]; then
        echo "Could not find league $league. Use $basename -l to list all available leagues." 1>&2
        exit 1
    fi
fi

json=$(curl -sL "https://www.fotmob.com/api/leagues?id=$id&season=$season")

if [[ $(jq -r '.playoff | length' <<< "$json") -gt 0 ]]; then
    jq '.table | .[] | .data .tables | .[] | .table .all | 
        (.[] | .name + "; " +
        ( .pts | tostring ) + "; " + 
        ( .wins | tostring) + "; " + 
        ( .draws | tostring) + "; " + 
        ( .losses | tostring) + "; " + 
        ( .scoresStr | tostring)), "\n"' -r <<< "$json" | column -L -t --separator=";" -N " ",Points,Wins,Draws,Losses,GD -R Points,Wins,Draws,Losses,GD | GREP_COLORS="mt=1;4;39:sl=1;4;39:cx=39" grep --color=always -A9999 -B9999 Points 
    jq -r '.playoff | .rounds | .[] | 
    ( 
        .matchups | 
        (
        .[] |
            (
                .matches | .[] | ( (.matchId | tostring) + ";" + (.home | .shortName + " " + if .score then (.score | tostring) else "0" end) + "-" + (.away | if .score then (.score | tostring) else "0" end + " " +.shortName) + ";" + (.status .utcTime | .[:19] + "Z" | fromdate | strflocaltime("%Y-%m-%d %H:%M")) + ";")
            ) +
            .homeTeam + " " + if .aggregatedResult | length > 0 then ((.aggregatedResult | .homeScore | tostring ) +  "-" + (.aggregatedResult | .awayScore | tostring ) + " ") else "" end + .awayTeam + ";" +
            ( 
                (.drawOrder + .drawOrder%2)/2 | tostring
            ) + 
            (
                .stage | .[2:] 
            ) + ";" +
            (  
            if (.drawOrder | tonumber > 0) then .drawOrder else 1 end | tostring 
            ) +
            (
            .stage | .[2:] | try (tonumber*2)  catch 2 | tostring
            )
        ) 
    ) '  <<< "$json" | column --separator=";" --tree 4 --tree-parent 5 --tree-id 6 -H 5,6 -N "Match ID",Result,Time,"Aggregate Result" | GREP_COLORS="mt=1;4;39:sl=1;4;39:cx=39" grep --color=always -A9999 -B9999 "Match ID"
else
    jq '.table | .[0] | .data | 
        (
            if (.tables) then (.tables | .[] ) else . end  
        ) 
        | "\n" + .leagueName? , 
        (
            .table | .all | .[] | .name + "; " + 
            ( .pts | tostring ) + "; " + 
            ( .wins | tostring) + "; " + 
            ( .draws | tostring) + "; " + 
            ( .losses | tostring) + "; " + 
            ( .scoresStr | tostring)
        )' -r <<< "$json" | column -L -t --separator=";" -N " ",Points,Wins,Draws,Losses,GD -R Points,Wins,Draws,Losses,GD | GREP_COLORS="mt=1;4;39:sl=1;4;39:cx=39" grep --color=always -A9999 -B9999 "Points"
fi
